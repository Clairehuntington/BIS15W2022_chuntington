box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "bill_length_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "WOLF POPULATION", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(sex==input$x)
ggplot(aes_string(x=sex)+ geom_bar()
})
ui <- dashboardPage(
dashboardHeader(title = "Wolf Population"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "bill_length_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "WOLF POPULATION", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(sex==input$x)
ggplot(aes_string(x=sex)+ geom_bar()
})
ui <- dashboardPage(
dashboardHeader(title = "Wolf Population"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN", "MI", "MT", "N.NWT", "ONT", "SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "bill_length_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "WOLF POPULATION", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
filter(pop==input$x)
ggplot(aes_string(x=sex)+ geom_bar()
})
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
UC_admit <- readr::read_csv("data/uc_data.csv")
uc_data
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/uc_data/UC_admit.csv")
uc_admit <- readr::read_csv("data/uc_data/UC_admit.csv")
glimpse(uc_admit)
glimpse(uc_admit)
uc_admit
glimpse(uc_admit)
uc_admit
names(uc_admit)
is.na(uc_admit)
which(is.na(uc_admit))
which(is.na(uc_admit))
names([[9817]])
which(is.na(uc_admit))
names(uc_admit[[9817]])
which(is.na(uc_admit))
uc_admit[[9817]]
which(is.na(uc_admit))
names(uc_admit$Ethnicity)
names(Ethnicity)
uc_admit$Ethnicity
uc_admit %>%
ggplot(aes(x=Ethnicity, fill=sex))+
geom_bar()+
facet_wrap(~campus)
uc_admit %>%
ggplot(aes(x=Ethnicity, fill=sex))+
geom_bar()+
facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=Ethnicity, fill=Ethnicity))+
geom_bar()+
facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=Ethnicity, y=`Perc FR`, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=`Perc FR`, y=Ethnicity, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=`Perc FR`, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=`Perc FR`, fill=Ethnicity))+scale_y_continuous(breaks=c(0.2,0.4,0.6,0.8,1.0))
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=`Perc FR`, fill=Ethnicity))+scale_y_continuous(breaks=c(0.2,0.4,0.6,0.8,1.0))
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=`Perc FR`, fill=Ethnicity))+scale_y_continuous(breaks=c(0.2,0.4,0.6,0.8,1.0))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=`Perc FR`, fill=Ethnicity))+ylim(1.0)+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=`Perc FR`, fill=Ethnicity))+ylim(c(1.0))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(y=`Perc FR`, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=`Perc FR`, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=`Perc FR`, fill=Ethnicity))+scale_y_continuous(limits=c(0,ylim))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(y= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=Ethnicity, y= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=Ethnicity, y= FilteredCountFR, fill=Ethnicity))+
geom_plot()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=Ethnicity, y= FilteredCountFR, fill=Ethnicity))+
geom_count()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=Ethnicity, y= FilteredCountFR, fill=Ethnicity))+
geom_density()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x=Ethnicity, y= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(y= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(y= FilteredCountFR, fill==Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(y== FilteredCountFR, fill==Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(y= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
ggplot(aes(x= Ethnicity, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
Davis %>%
ggplot(aes(x= Ethnicity, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
filter(Campus==Davis)
uc_admit %>%
filter(Campus=Davis)
uc_admit %>%
filter(Campus="Davis")
uc_admit %>%
filter(Campus=="Davis")
ggplot(aes(x= Ethnicity, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
filter(Campus=="Davis") %>%
ggplot(aes(x= Ethnicity, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
filter(Campus=="Davis") %>%
ggplot(aes(x= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
filter(Campus=="Davis") %>%
filter(Academic_Yr=="2015")
ggplot(aes(x= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
filter(Campus=="Davis") %>%
filter(Academic_Yr=="2015") %>%
ggplot(aes(x= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
filter(Campus=="Davis") %>%
filter(Academic_Yr=="2015") %>%
ggplot(aes(y= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
filter(Campus=="Davis") %>%
filter(Academic_Yr=="2015") %>%
ggplot(aes(x= FilteredCountFR, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
uc_admit %>%
filter(Campus=="Davis") %>%
filter(Academic_Yr=="2015") %>%
ggplot(aes(x= `Perc FR`, fill=Ethnicity))+
geom_bar()+ facet_wrap(~Campus)
UC_admit <- UC_admit %>%
filter(Ethnicity!="All")
uc_admit <- uc_admit %>%
filter(Ethnicity!="All")
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options",
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options",
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
), # close the first box
box(title = "UC Admissions",
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes_string(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options",
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
), # close the first box
box(title = "UC Admissions",
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes_string(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col()+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit <- uc_admit %>%
filter(Ethnicity!="All")
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options",
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
), # close the first box
box(title = "UC Admissions",
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes_string(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col()+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options",
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
), # close the first box
box(title = "UC Admissions",
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes_string(x=Ethnicity, y=FilteredCountFR)) +
geom_col()+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options",
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
), # close the first box
box(title = "UC Admissions",
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes_string(x="Ethnicity", y=FilteredCountFR)) +
geom_col()+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options",
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
), # close the first box
box(title = "UC Admissions",
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes_string(x="Ethnicity", y="FilteredCountFR")) +
geom_col()+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options",
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Admits")
), # close the first box
box(title = "UC Admissions",
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes_string(x="Ethnicity", y="FilteredCountFR")) +
geom_col()+
labs(x = "Ethnicity", y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
