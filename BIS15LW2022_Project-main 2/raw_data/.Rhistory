population_long_100 <- population_long %>%
filter(year>="1920" & year<="2020")
income_long_100 <- income_long %>%
filter(year>="1920" & year<="2020")
income_long%>%
filter(country %in% c("Qatar", "Luxembourg", "Singapore", "Brunei", "Ireland")between(year,1920,2020))%>%
income_long%>%
filter(country %in% c("Qatar", "Luxembourg", "Singapore", "Brunei", "Ireland"),between(year,1920,2020))%>%
ggplot(aes(x=year, y=income_per_person,  group=country,color=country))+geom_point()+geom_line()+facet_wrap(~country) + labs(title="Top 5 Countries GDP per Capita from 1920 to 2020", x="Year", y="GDP")
income_long%>%
filter(country %in% c("Qatar", "Luxembourg", "Singapore", "Brunei", "Ireland"),between(year,1920,2020))%>%
ggplot(aes(x=year, y=income_per_person,  group=country,color=country))+geom_point()+geom_line()+facet_wrap(~country) + labs(title="Top 5 Countries Income from 1920 until 2020", x="Year", y="GDP")
gapminder_join%>%
filter(country %in% c("Qatar", "Luxembourg", "Singapore", "Brunei", "Ireland"))%>%
ggplot(aes(x=life_long_100, y=population_long_100, group=country, color=country)) + geom_point()
gapminder_join%>%
filter(country %in% c("Qatar", "Luxembourg", "Singapore", "Brunei", "Ireland"))%>%
ggplot(aes(x=life_expect, y=population_tot, group=country, color=country)) + geom_point()
gapminder_join%>%
filter(country %in% c("Qatar", "Luxembourg", "Singapore", "Brunei", "Ireland"))%>%
ggplot(aes(x=life_expect, y=population_tot, group=country, color=country)) + geom_point()+facet_wrap(~country)
gapminder_join%>%
filter(country %in% c("Qatar", "Luxembourg", "Singapore", "Brunei", "Ireland"))%>%
ggplot(aes(x=life_expect, y=population_tot, group=country, color=country)) + geom_point()+facet_wrap(~country)+ labs(title="Life Expectancy vs Population for Top 5 GDP per Capita Countries", x="Life Expectancy", y="Population")
gapminder_join%>%
filter(country %in% c("Qatar", "Luxembourg", "Singapore", "Brunei", "Ireland"))%>%
ggplot(aes(x=population_tot, y=life_expect, group=country, color=country)) + geom_point()+facet_wrap(~country)+ labs(title="Life Expectancy vs Population for Top 5 GDP per Capita Countries", x="Population", y="Life Expectancy")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("devtools")
#library(devtools)
#devtools::install_github("dkahle/ggmap")
#install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
#install.packages("devtools")
#library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("remotes")
#remotes::install_github("hrbrmstr/albersusa")
install.packages("remotes")
install.packages("remotes")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
install.packages("yaml")
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "evaluate", "generics", "jsonlite", "pillar", "readr", "rlang", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "evaluate", "generics", "jsonlite", "pillar", "readr", "rlang", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "evaluate", "generics", "jsonlite", "pillar", "readr", "rlang", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "evaluate", "generics", "jsonlite", "pillar", "readr", "rlang", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "evaluate", "generics", "jsonlite", "pillar", "readr", "rlang", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "evaluate", "generics", "jsonlite", "pillar", "readr", "rlang", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "evaluate", "generics", "jsonlite", "pillar", "readr", "rlang", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "evaluate", "generics", "jsonlite", "pillar", "readr", "rlang", "tidyr", "tidyselect", "tinytex", "yaml"))
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "dplyr", "evaluate", "generics", "jsonlite", "pillar", "readr", "rlang", "tidyr", "tidyselect", "tinytex", "yaml"))
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv(here("lab12", "data", "full_spiders.csv")) %>% clean_names()
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info <- clean_names(superhero_info)
superhero_info
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) + geom_boxplot(na.rm = TRUE)+
coord_flip()
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_violin()
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(color = "grey", na.rm = TRUE)+
geom_violin()
superhero_info %>%
ggplot(aes(x=gender, y=weight, fill=gender))+
geom_violin()
head(beachbugs_long)
beachbugs_long %>%
ggplot(aes(x=site, y=year, fill=buglevels))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized %>%
ggplot(aes(x=site, y=year, fill=norm_buglevel))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eye_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "no hair")%>%
pull(name)
questions_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
# something like:
# ggVennDiagram( list, category.names = c("name", "name", "name", "name"))
evil_bald_men <- ggVennDiagram(questions_list, category.names = c("evil", "red eye", "male", "bald"))
evil_bald_men
superhero_info%>%
filter(gender != "male")%>%
filter(alignment == "bad")%>%
filter(eye_color == "red") %>%
select(name)
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity %>%
ggplot(aes(
label = hero_names,  size = sum_powers, color = hero_names )) +
geom_text_wordcloud() +
theme_classic()
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info <- clean_names(superhero_info)
superhero_info
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) + geom_boxplot(na.rm = TRUE)+
coord_flip()
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_violin()
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(color = "grey", na.rm = TRUE)+
geom_violin()
superhero_info %>%
ggplot(aes(x=gender, y=weight, fill=gender))+
geom_violin()
head(beachbugs_long)
beachbugs_long %>%
ggplot(aes(x=site, y=year, fill=buglevels))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized %>%
ggplot(aes(x=site, y=year, fill=norm_buglevel))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eye_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "no hair")%>%
pull(name)
questions_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
# something like:
# ggVennDiagram( list, category.names = c("name", "name", "name", "name"))
evil_bald_men <- ggVennDiagram(questions_list, category.names = c("evil", "red eye", "male", "bald"))
evil_bald_men
superhero_info%>%
filter(gender != "male")%>%
filter(alignment == "bad")%>%
filter(eye_color == "red") %>%
select(name)
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity %>%
ggplot(aes(
label = hero_names,  size = sum_powers, color = hero_names )) +
geom_text_wordcloud() +
theme_classic()
install.packages(c("broom", "cli", "clipr", "colorspace", "crayon", "desc", "dplyr", "evaluate", "generics", "glue", "jsonlite", "maptools", "mgcv", "openssl", "pillar", "readr", "rlang", "rmarkdown", "sf", "survival", "tidyr", "tidyselect", "tinytex", "withr", "xfun", "yaml"))
install.packages("sf")
remove.packages("yaml")
install.packages("yaml")
install.packages("yaml")
#remove.packages("yaml")
install.packages("yaml")
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info <- clean_names(superhero_info)
superhero_info
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) + geom_boxplot(na.rm = TRUE)+
coord_flip()
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_violin()
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(color = "grey", na.rm = TRUE)+
geom_violin()
superhero_info %>%
ggplot(aes(x=gender, y=weight, fill=gender))+
geom_violin()
head(beachbugs_long)
beachbugs_long %>%
ggplot(aes(x=site, y=year, fill=buglevels))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized %>%
ggplot(aes(x=site, y=year, fill=norm_buglevel))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eye_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "no hair")%>%
pull(name)
questions_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
# something like:
# ggVennDiagram( list, category.names = c("name", "name", "name", "name"))
evil_bald_men <- ggVennDiagram(questions_list, category.names = c("evil", "red eye", "male", "bald"))
evil_bald_men
superhero_info%>%
filter(gender != "male")%>%
filter(alignment == "bad")%>%
filter(eye_color == "red") %>%
select(name)
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity %>%
ggplot(aes(
label = hero_names,  size = sum_powers, color = hero_names )) +
geom_text_wordcloud() +
theme_classic()
#remove.packages("yaml")
#install.packages("yaml")
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info <- clean_names(superhero_info)
superhero_info
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) + geom_boxplot(na.rm = TRUE)+
coord_flip()
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_violin()
superhero_info %>%
ggplot(aes(x = alignment, y = weight, fill = alignment)) +
geom_boxplot(color = "grey", na.rm = TRUE)+
geom_violin()
superhero_info %>%
ggplot(aes(x=gender, y=weight, fill=gender))+
geom_violin()
head(beachbugs_long)
beachbugs_long %>%
ggplot(aes(x=site, y=year, fill=buglevels))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized %>%
ggplot(aes(x=site, y=year, fill=norm_buglevel))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eye_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "no hair")%>%
pull(name)
questions_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
# something like:
# ggVennDiagram( list, category.names = c("name", "name", "name", "name"))
evil_bald_men <- ggVennDiagram(questions_list, category.names = c("evil", "red eye", "male", "bald"))
evil_bald_men
superhero_info%>%
filter(gender != "male")%>%
filter(alignment == "bad")%>%
filter(eye_color == "red") %>%
select(name)
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity %>%
ggplot(aes(
label = hero_names,  size = sum_powers, color = hero_names )) +
geom_text_wordcloud() +
theme_classic()
install.packages("sf")
chaeto_1
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(shiny)
library(lubridate)
library(dplyr)
chaeto_1 <- readr::read_csv("ph_chaeto_set_1.csv")
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(shiny)
library(lubridate)
library(dplyr)
chaeto_1 <- readr::read_csv("ph_chaeto_set_1.csv")
setwd("~/Desktop/BIS15W2022_chuntington/BIS15LW2022_Project-main 2/raw_data")
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(shiny)
library(lubridate)
library(dplyr)
chaeto_1 <- readr::read_csv("ph_chaeto_set_1.csv")
chaeto_1 <- readr::read_csv("ph_chaeto_set_1.csv")
setwd("~/Desktop/BIS15W2022_chuntington/BIS15LW2022_Project-main 2/raw_data")
chaeto_1 <- readr::read_csv("ph_chaeto_set_1.csv")
chaeto_1 <- readr::read_csv("ph_chaeto_set_1.csv")
